#include <bits/stdc++.h>
using namespace std;

vector<int> prime(int m, int n) {
    vector<int> v;
    int diff = n - m + 1;
    bool isPrime[diff];
    memset(isPrime, true, sizeof(isPrime));

    for (int i = 2; i * i <= n; i++) {
        int fm = (m / i) * i;
        if (fm < n) {
            fm = fm + i;
        }
        int k = fm - m;
        if (isPrime[i]) {
            for (int j = max(i * i, k * k); j <= n; j += i) {
                isPrime[j - m] = false;
            }
        }
    }

    for (int i = max(2, m); i <= n; i++) {
        if (isPrime[i - m]) {
            v.push_back(i);
        }
    }

    return v;
}

int main() {
    int n, m;
    cin >> n >> m;

    vector<int> pri = prime(n, m);

    for (int i = 0; i < pri.size(); i++) {
        cout << pri[i] << ' ';
    }

    return 0;
}
